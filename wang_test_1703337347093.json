{
    "Sheet1": [
        {
            "instruction": "#Average annual wages.xlsx中2022年建筑业和教育就业人员年平均工资是多少",
            "output": "!pip install pandas\r\n!pip install xlrd\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\ndf = pd.read_excel('Average annual wages.xlsx')\r\nyear='2022年'\r\nindustry1='建筑业'\r\nindustry2='教育'\r\nwages_industry1=df.loc[df['行业']==industry1,year].values[0]\r\nwages_industry2=df.loc[df['行业']==industry2,year].values[0]\r\nprint(f'{year},{industry1}的就业人员年平均工资是：{wages_industry1}')\r\nprint(f'{year},{industry2}的就业人员年平均工资是：{wages_industry2}')"
        },
        {
            "instruction": "Average annual wages.xlsx中金融业和教育就业人员年平均工资增长速度是多少",
            "output": "!pip install pandas\r\n!pip install xlrd\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\ndf = pd.read_excel('Average annual wages.xlsx')\r\nyear='增长速度'\r\nindustry1='金融业'\r\nindustry2='教育'\r\nwages_industry1=df.loc[df['行业']==industry1,year].values[0]\r\nwages_industry2=df.loc[df['行业']==industry2,year].values[0]\r\nprint(f'{industry1}的就业人员年平均工资增长速度是：{wages_industry1}')\r\nprint(f'{industry2}的就业人员年平均工资增长速度是：{wages_industry2}')"
        },
        {
            "instruction": "Manufacturing Purchasing Managers' Index.xls中2022年12月和2023年5月中国制造业新订单的变化情况",
            "output": "!pip install pandas\r\n!pip install xlrd\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Manufacturing Purchasing Managers Index.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nprogram='新订单'\r\nmoment1='2022年12月'\r\nmoment2='2023年5月'\r\nvary_moment1=df.loc[df['时段']==moment1,program].values[0]\r\nvary_moment2=df.loc[df['时段']==moment2,program].values[0]\r\nprint(f'{moment1}中国制造业{program}的变化情况是：{vary_moment1}')\r\nprint(f'{moment2}中国制造业{program}的变化情况是：{vary_moment2}')"
        },
        {
            "instruction": "Revenues and expenditures of urban and rural residents.xls中城镇居民居住支出和农村居民财产净收入的绝对量是多少",
            "output": "!pip install pandas\r\n!pip install xlrd\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Revenues and expenditures of urban and rural residents.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nstatusquo='绝对量'\r\nindex1='城镇居民居住支出'\r\nindex2='农村居民财产净收入'\r\nvary_index1=df.loc[df['指标']==index1,statusquo].values[0]\r\nvary_index2=df.loc[df['指标']==index2,statusquo].values[0]\r\nprint(f'{index1}的{statusquo}是：{vary_index1}')\r\nprint(f'{index2}的{statusquo}是：{vary_index2}')"
        },
        {
            "instruction": "画出Average annual wages.xlsx中每种行业在2022年和2021年的平均工资的柱状统计图",
            "output": "!pip install pandas\r\n!pip install xlrd\r\n!pip install matplotlib\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Average annual wages.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\ndf.plot.bar(x='行业',y=['2022年','2021年'])\r\nplt.show()"
        },
        {
            "instruction": "画出Manufacturing Purchasing Managers Index.xlsx中PMI，生产，新订单的柱状统计图",
            "output": "!pip install pandas\r\n!pip install xlrd\r\n!pip install matplotlib\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Manufacturing Purchasing Managers Index.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\ndf.plot.bar(x='时段',y=['PMI','生产','新订单'])\r\nplt.show()"
        },
        {
            "instruction": "画出Manufacturing Purchasing Managers Index.xlsx中PMI和进口指数随时段变化的折线统计图",
            "output": "!pip install pandas\r\n!pip install xlrd\r\n!pip install matplotlib\r\n!pip install xlwt\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Manufacturing Purchasing Managers Index.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nplt.plot(df[\"时段\"],df[\"PMI\"],label='PMI',linewidth=3,color='r',marker='o',\r\nmarkerfacecolor='blue',markersize=12)\r\nplt.plot(df[\"时段\"],df[\"进口\"],label='进口',linewidth=3,color='y',marker='o',\r\nmarkerfacecolor='blue',markersize=12)\r\nplt.xlabel(\"时段\")\r\nplt.ylabel('指数')\r\nplt.title(\"不同指标的指数\")\r\nplt.legend()\r\nplt.grid()\r\nplt.show()"
        },
        {
            "instruction": "画出Manufacturing Purchasing Managers Index.xlsx中采购经理指数各指标情况的热图",
            "output": "!pip install pandas\r\n!pip install matplotlib\r\n!pip install seaborn\r\n!pip install xlwt\r\n!pip install numpy\r\nimport numpy as np\r\nimport xlwt\r\nimport seaborn as sns\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Manufacturing Purchasing Managers Index.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\ndf.set_index('时段', inplace=True)\r\nax = sns.heatmap(df,annot=True,fmt='.1f',cmap=\"Blues\",vmax=-0.1, vmin=0.5)\r\n#  annot=True表示每一个格子显示数字;fmt='.0f'表示保留0位小数，同理fmt='.1f'表示保留一位小数\r\n#  camp表示颜色，在另一个博主的文章中讲解的很清晰\r\n#  vmax=350, vmin=20表示右侧颜色条的最大最小值，在最大最小值外的颜色将直接以最大或最小值的颜色显示，\r\n#  通过此设置就可以解决少数值过大从而使得大部分色块区别不明显的问题\r\n#  xticklabels=x_ticks, yticklabels=y_ticks，横纵轴标签\r\nax.set_title('采购经理指数各指标情况')  # 图标题\r\nax.set_xlabel('指标')  # x轴标题\r\nax.set_ylabel('时间')  # y轴标题\r\nplt.show()"
        },
        {
            "instruction": "画出Average annual wages.xlsx中2021年和2022年的不同行业的平均工资的折线统计图和柱状统计图",
            "output": "!pip install pandas\r\n!pip install xlrd\r\n!pip install matplotlib\r\n!pip install xlwt\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Average annual wages.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nplt.plot(df[\"行业\"],df[\"2021年\"],label='PMI',linewidth=3,color='r',marker='o',\r\nmarkerfacecolor='blue',markersize=12)\r\nplt.plot(df[\"行业\"],df[\"2022年\"],label='进口',linewidth=3,color='y',marker='o',\r\nmarkerfacecolor='blue',markersize=12)\r\nplt.xlabel(\"行业\")\r\nplt.ylabel('平均工资')\r\nplt.title(\"不同行业的平均工资\")\r\nplt.legend()\r\nplt.grid()\r\nplt.show()\r\ndf.plot.bar(x='行业',y=['2021年','2022年'])\r\nplt.show()"
        },
        {
            "instruction": "画出Average annual wages.xlsx中2022年各行业平均工资的扇形统计图",
            "output": "!pip install pandas\r\n!pip install matplotlib\r\n!pip install seaborn\r\n!pip install xlwt\r\n!pip install numpy\r\nimport numpy as np\r\nimport xlwt\r\nimport seaborn as sns\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Average annual wages.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nplt.pie(df['2022年'],labels=df['行业'],labeldistance=1.1,autopct='%1.1f%%',pctdistance=0.8,startangle=90,radius=10)\r\nplt.title('2022年各行业平均工资占比')\r\nplt.axis('equal')\r\nplt.tight_layout()\r\nplt.show()"
        },
        {
            "instruction": "画出Average annual wages.xlsx中2022年各行业平均工资的环形统计图",
            "output": "!pip install pandas\r\n!pip install matplotlib\r\n!pip install seaborn\r\n!pip install xlwt\r\n!pip install numpy\r\nimport numpy as np\r\nimport xlwt\r\nimport seaborn as sns\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Average annual wages.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nplt.pie(df['2022年'],labels=df['行业'],labeldistance=1.1,autopct='%1.1f%%',pctdistance=0.8,startangle=90,radius=10,wedgeprops={'width': 5})\r\nplt.title('2022年各行业平均工资占比')\r\nplt.axis('equal')\r\nplt.tight_layout()\r\nplt.show()"
        },
        {
            "instruction": "画出Average annual wages.xlsx中2021年的不同行业的平均工资的柱状统计图和增长速度的折线统计图，并画在同一张表格上",
            "output": "!pip install pandas\r\n!pip install xlrd\r\n!pip install matplotlib\r\n!pip install xlwt\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Average annual wages.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\nx_values = df[\"行业\"]\r\ny_values_line = df[\"增长速度\"]\r\nvalues_bar =df[\"2021年\"]\r\nfig, ax1 = plt.subplots()\r\n# 绘制折线图\r\nax1.plot(x_values, y_values_line, marker='o',linewidth=3, color='blue', label='折线图')\r\nax1.set_xlabel('行业')\r\nax1.set_ylabel('增长速度(%)', color='blue')\r\nax1.tick_params(axis='y', labelcolor='blue')\r\n# 创建第二个坐标轴，用于条形图\r\nax2 = ax1.twinx()\r\n# 绘制条形统计图\r\nax2.bar(x_values, values_bar, alpha=0.7, color='red', label='条形统计图')\r\nax2.set_ylabel('2021年工资', color='red')\r\nax2.tick_params(axis='y', labelcolor='red')\r\n# 添加图例\r\nlines, labels = ax1.get_legend_handles_labels()\r\nbars, bar_labels = ax2.get_legend_handles_labels()\r\nax2.legend(lines + bars, labels + bar_labels, loc='best')\r\nplt.title('折线图和条形统计图示例')\r\nplt.show()"
        },
        {
            "instruction": "画出Average annual wages.xlsx中2022年各行业的平均工资的玫瑰图",
            "output": "!pip install pandas\r\n!pip install matplotlib\r\n!pip install seaborn\r\n!pip install xlwt\r\n!pip install numpy\r\nimport numpy as np\r\nimport xlwt\r\nimport seaborn as sns\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nfrom pyecharts.charts import Pie\r\nfrom pyecharts import options as opts\r\nmatplotlib.rcParams['font.sans-serif'] = ['simsun']  # 显示字体为宋体\r\n #数据\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Average annual wages.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\ndf = df.sort_values(\"2022年\")\r\np = df['行业'].values.tolist()\r\nr = df['2022年'].values.tolist()\r\n#画图\r\nfig = plt.figure(figsize=(10, 6),  # 画布大小\r\n                 dpi=400,  # 分辨率\r\n                 facecolor='lightyellow',  # 背景色\r\n                 )\r\n# 4.\r\nax = plt.axes(polar=True)  # 实例化极坐标系\r\n# ax = plt.subplot(111, projection=\"polar\")  # polar 投影(扫描方式，自正北方向顺时针)\r\nax.set_theta_zero_location(\"N\")  # 极坐标 0° 方向为 N\r\nax.set_theta_direction(-1)  # 顺时针为极坐标正方向\r\ntheta = np.linspace(0, np.pi * 2, len(r), endpoint=False)  # 等分极坐标系\r\n# 添加饼图\r\nax.bar(x=theta,  # 柱体的角度坐标\r\n       height=r,  # 柱体的高度, 半径坐标\r\n       width=np.pi / 6,  # 柱体的宽度  np.pi / 6\r\n       color=np.random.random((len(r), 3)),  # 随机产生颜色\r\n       align=\"edge\")  # 原理圆心，设置偏离距离\r\nax.set_title('2022年各行业的平均工资', fontdict={'fontsize': 20})\r\nfor angle, height, text in zip(theta, r, p):\r\n    ax.text(angle + 0.25, height + 120, str(text), fontsize=9)  # 设置显示文本的位置以及字体大小\r\nplt.axis(\"off\")\r\nplt.savefig(\"玫瑰图.png\")\r\nplt.show()"
        },
        {
            "instruction": "画出Average annual wages.xlsx中不同行业在2022年和2021年的平均工资的折线统计图",
            "output": "!pip install pandas\r\n!pip install xlrd\r\n!pip install matplotlib\r\n!pip install xlwt\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd()) \r\nnotebook_dir= os.getcwd() \r\nexcel_file = os.path.join(notebook_dir, 'Average annual wages.xlsx')  \r\ndf = pd.read_excel(excel_file)\r\nplt.plot(df[\"行业\"],df[\"2022年\"],label='2022年',linewidth=3,color='r',marker='o',\r\nmarkerfacecolor='blue',markersize=12)\r\nplt.plot(df[\"行业\"],df[\"2021年\"],label='2021年',linewidth=3,color='y',marker='o',\r\nmarkerfacecolor='blue',markersize=12)\r\nplt.xlabel(\"行业\")\r\nplt.ylabel('平均工资')\r\nplt.title(\"不同行业的平均工资\")\r\nplt.legend()\r\nplt.grid()\r\nplt.show()"
        },
        {
            "instruction": "画出Manufacturing Purchasing Managers Index.xlsx中从业人员随时段变化的柱状统计图和生产随时段变化的折线统计图，并画在同一张表格上",
            "output": "!pip install pandas\r\n!pip install xlrd\r\n!pip install matplotlib\r\n!pip install xlwt\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Manufacturing Purchasing Managers Index.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\nx_values = df[\"时段\"]\r\ny_values_line = df[\"生产\"]\r\nvalues_bar =df[\"从业人员\"]\r\nfig, ax1 = plt.subplots()\r\n# 绘制折线图\r\nax1.plot(x_values, y_values_line, marker='o',linewidth=3, color='blue', label='折线图')\r\nax1.set_xlabel('时段')\r\nax1.set_ylabel('生产', color='blue')\r\nax1.tick_params(axis='y', labelcolor='blue')\r\n# 创建第二个坐标轴，用于条形图\r\nax2 = ax1.twinx()\r\n# 绘制条形统计图\r\nax2.bar(x_values, values_bar, alpha=0.7, color='red', label='条形统计图')\r\nax2.set_ylabel('从业人员', color='red')\r\nax2.tick_params(axis='y', labelcolor='red')\r\n# 添加图例\r\nlines, labels = ax1.get_legend_handles_labels()\r\nbars, bar_labels = ax2.get_legend_handles_labels()\r\nax2.legend(lines + bars, labels + bar_labels, loc='best')\r\nplt.title('生产折线图和从业人员条形统计图')\r\n\r\nplt.show()"
        },
        {
            "instruction": "画出Manufacturing Purchasing Managers Index.xlsx中不同时段采购量指标的扇形统计图",
            "output": "!pip install pandas\r\n!pip install matplotlib\r\n!pip install seaborn\r\n!pip install xlwt\r\n!pip install numpy\r\nimport numpy as np\r\nimport xlwt\r\nimport seaborn as sns\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Manufacturing Purchasing Managers Index.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nplt.pie(df['采购量'],labels=df['时段'],labeldistance=1.1,autopct='%1.1f%%',pctdistance=0.8,startangle=90,radius=10)\r\nplt.title('不同时段采购量指标的占比')\r\nplt.axis('equal')\r\nplt.tight_layout()\r\nplt.show()"
        },
        {
            "instruction": "画出Revenues and expenditures of urban and rural residents.xlsx中绝对量的不同指标占比的环形统计图",
            "output": "!pip install pandas\r\n!pip install matplotlib\r\n!pip install seaborn\r\n!pip install xlwt\r\n!pip install numpy\r\nimport numpy as np\r\nimport xlwt\r\nimport seaborn as sns\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nmatplotlib.rc(\"font\",family='YouYuan')\r\nprint(os.getcwd())  # 获取当前工作目录\r\nnotebook_dir= os.getcwd()  # 获取 Jupyter Notebook 的当前工作目录\r\nexcel_file = os.path.join(notebook_dir, 'Revenues and expenditures of urban and rural residents.xlsx')  # 拼接 Excel 文件的路径\r\ndf = pd.read_excel(excel_file)\r\nplt.pie(df['绝对量'],labels=df['指标'],labeldistance=1.1,autopct='%1.1f%%',pctdistance=0.8,startangle=90,radius=10,wedgeprops={'width': 5})\r\nplt.title('绝对量的不同指标占比')\r\nplt.axis('equal')\r\nplt.tight_layout()\r\nplt.show()"
        },
        {
            "instruction": "画出Revenues and expenditures of urban and rural residents.xlsx中同比名义增长在不同指标占比的玫瑰图",
            "output": "!pip install pandas\r\n!pip install matplotlib\r\n!pip install seaborn\r\n!pip install xlwt\r\n!pip install numpy\r\nimport numpy as np\r\nimport xlwt\r\nimport seaborn as sns\r\nimport pandas as pd\r\nimport os\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\nfrom pyecharts.charts import Pie\r\nfrom pyecharts import options as opts\r\nmatplotlib.rcParams['font.sans-serif'] = ['simsun'] \r\nprint(os.getcwd()) \r\nnotebook_dir= os.getcwd()  \r\nexcel_file = os.path.join(notebook_dir, 'Revenues and expenditures of urban and rural residents.xlsx')  \r\ndf = pd.read_excel(excel_file)\r\ndf = df.sort_values(\"同比名义增长\")\r\np = df['指标'].values.tolist()\r\nr = df['同比名义增长'].values.tolist()\r\nfig = plt.figure(figsize=(10, 6), \r\n                 dpi=400, \r\n                 facecolor='lightyellow',  \r\n                 )\r\nax = plt.axes(polar=True)  \r\n# ax = plt.subplot(111, projection=\"polar\") \r\nax.set_theta_zero_location(\"N\")  \r\nax.set_theta_direction(-1)  \r\ntheta = np.linspace(0, np.pi * 2, len(r), endpoint=False) \r\nax.bar(x=theta, \r\n       height=r, \r\n       width=np.pi / 6, \r\n       color=np.random.random((len(r), 3)), \r\n       align=\"edge\") \r\nax.set_title('同比名义增长在各个时段占比', fontdict={'fontsize': 20})\r\nfor angle, height, text in zip(theta, r, p):\r\n    ax.text(angle + 0.25, height + 120, str(text), fontsize=9) \r\nplt.axis(\"off\")\r\nplt.savefig(\"同比名义增长在不同指标占比.png\")\r\nplt.show()"
        },
        {
            "instruction": "#Revenues and expenditures of urban and rural residents.xlsx中绝对量和同比名义增长的平均值",
            "output": "!pip install pandas\r\n!pip install xlrd\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\ndf = pd.read_excel('Revenues and expenditures of urban and rural residents.xlsx')\r\nthing1='绝对量'\r\nthing2='同比名义增长'\r\navg1 = df ['绝对量'].mean ()\r\navg2 = df ['同比名义增长'].mean ()\r\nprint(f'{thing1}的不同指标的平均值是：{avg1}')\r\nprint(f'{thing2}的不同指标的平均值是：{avg2}')"
        },
        {
            "instruction": "Average annual wages.xlsx中2021年和2022年中不同行业平均工资的最小值和最大值分别是多少",
            "output": "!pip install pandas\r\n!pip install xlrd\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\ndf = pd.read_excel('Average annual wages.xlsx')\r\nyear1='2021年'\r\nyear2='2022年'\r\nmin_value1=df['2021年'].min()\r\nmin_value2=df['2022年'].min()\r\nmax_value1=df['2021年'].max()\r\nmax_value2=df['2022年'].max()\r\nprint(f'{year1}不同行业平均工资的最小值是：{min_value1},最大值是：{max_value1}')\r\nprint(f'{year2}不同行业平均工资的最小值是：{min_value2},最大值是：{max_value2}')"
        },
        {
            "instruction": "Manufacturing Purchasing Managers Index.xlsx中PMI和在手订单在不同时段的最小值和最大值分别是多少",
            "output": "!pip install pandas\r\n!pip install xlrd\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\ndf = pd.read_excel('Manufacturing Purchasing Managers Index.xlsx')\r\nthing1='PMI'\r\nthing2='在手订单'\r\nmin_value1=df['PMI'].min()\r\nmin_value2=df['在手订单'].min()\r\nmax_value1=df['PMI'].max()\r\nmax_value2=df['在手订单'].max()\r\nprint(f'{thing1}在不同时段的最小值是：{min_value1},最大值是：{max_value1}')\r\nprint(f'{thing2}在不同时段的最小值是：{min_value2},最大值是：{max_value2}')"
        },
        {
            "instruction": "#列出Average annual wages.xlsx中2021年和2022年的平均工资超过100000的行业",
            "output": "!pip install pandas\r\n!pip install xlrd\r\nimport xlrd\r\nimport pandas as pd\r\nimport os\r\ndef wage_100000(a):\r\n    return a >=100000\r\nsh_excel=pd.read_excel('Average annual wages.xlsx')\r\nsh_excel=sh_excel.loc[sh_excel['2021年'].apply(wage_100000)].loc[sh_excel['2022年'].apply(wage_100000)]\r\nprint(sh_excel)"
        }
    ]
}